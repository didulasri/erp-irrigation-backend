name: Backend CI + SonarQube (Postgres)

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main", "develop" ]

permissions:
  contents: read
  pull-requests: read

env:
  SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
  SONAR_TOKEN:    ${{ secrets.SONAR_TOKEN }}
  SONAR_PROJECT_KEY: ${{ secrets.SONAR_PROJECT_KEY }}

jobs:
  backend:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:17
        env:
          POSTGRES_DB: erp_ci
          POSTGRES_USER: erp
          POSTGRES_PASSWORD: erp
        # Use the service hostname "postgres" from the job
        options: >-
          --health-cmd="pg_isready -U erp -d erp_ci"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10

    env:
      # Spring will pick these up for the ci profile
      SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/irrigation_erp_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: didulapostgre123

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"
          cache: maven

      - name: Make Maven Wrapper executable
        run: chmod +x mvnw

      - name: SonarQube Scan
        run: |
          ./mvnw -B org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
            -Dsonar.host.url="${SONAR_HOST_URL}" \
            -Dsonar.login="${SONAR_TOKEN}" \
            -Dsonar.projectKey="${SONAR_PROJECT_KEY}" \
            -Dsonar.projectName="ERP Backend" \
            -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml

      - name: Upload reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: surefire-and-jacoco
          path: |
            target/surefire-reports/**
            target/site/jacoco/**
          if-no-files-found: ignore

  quality-gate:
    runs-on: ubuntu-latest
    needs: backend
    steps:
      - name: Check Quality Gate
        uses: SonarSource/sonarqube-quality-gate-action@v1.1.0
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
